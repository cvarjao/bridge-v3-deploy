apiVersion: v1
kind: Template
metadata:
  name: bridge-template
  annotations:
    description: "Installation of the Birdge Rabbitmq"
    tags: "bridge"
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: bridg-rabbitmq-pvc
    labels:
      app: bridge-rabbitmq
  spec:
    storageClassName: rabbitmq-pv
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: 1Gi

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: bridge-rabbitmq-config
    labels:
      app: bridge-rabbitmq
  data:
    RABBITMQ_DEFAULT_USER: ****
    RABBITMQ_DEFAULT_PASS: ****  
    RABBITMQ_DEFAULT_VHOST: "sbsbridge_vhost" 

- apiVersion: apps/v1
  kind: StatefulSet
  metadata: 
    name: bridge-rabbitmq
  spec:
    selector:
      matchLabels:
        app: bridge-rabbitmq
    serviceName: "bridge-rabbitmq" 
    replicas: 1
    template:
      metadata:
        labels: 
          app: bridge-rabbitmq
      spec:
        containers:
          - name: bridge-rabbitmq
            image: rabbitmq:3.7.4-management
            envFrom:
              - configMapRef: 
                  name: bridge-rabbitmq-config
            ports:
              - containerPort: 5672
                name: amqp
              - containerPort: 15672
                name: http
            volumeMounts:
              - name: bridge-rabbitmq-volume
                mountPath:  "/var/lib/rabbitmq"  #check if it is correct to do this
            resources: 
              limits:
                memory: 500Mi
        volumes: 
          - name: bridge-rabbitmq-volume
            persistentVolumeClaim:
              claimName: bridg-rabbitmq-pvc

- apiVersion: v1
  kind: Service 
  metadata: 
    name: bridge-rabbitmq
    labels:
      app: bridge-rabbitmq
  spec: 
    selector: 
      app: bridge-rabbitmq
    type: NodePort
    ports: 
      - port: 5672
        targetPort: 5672
        name: amqp
      - port: 15672
        targetPort: 15672
        name: http